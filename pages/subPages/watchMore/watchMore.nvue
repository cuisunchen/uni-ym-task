<template>
	<view class="watchMore flex1 flex-column">
		<header class="tabs row">
			<view class="tabBox flex1 row all-center" v-for="(tab,index) in tabList" :key="index" @click="tabChange(index,tab.id)">
				<text class="tab" :ref="tab.id" :class="{active:tabIndex == index}" :id="tab.id">{{tab.name}}</text>
			</view>
			<!-- <view class="underLine" :style="{width: lineWidth + 'px', left: lineLeft + 'px'}"></view> -->
		</header>
		<swiper class="flex1 swiper" :current="tabIndex" :indicator-dots="false" :autoplay="false" @change="swiperChange">
			<!-- 2人团 -->
			<swiper-item class="swiperItem flex1 flex-column">
				<pt2></pt2>
			</swiper-item>
			<!-- 10人团 -->
			<swiper-item class="swiperItem flex1 flex-column">
				<pt10></pt10>
			</swiper-item>
			<!-- 50人团 -->
			<swiper-item class="swiperItem flex1 flex-column">
				<pt50></pt50>
			</swiper-item>
			<!-- 100人团 -->
			<swiper-item class="swiperItem flex1 flex-column">
				<pt100></pt100>
			</swiper-item>
		</swiper>
	</view>
</template>

<script>
	import pt2 from './pt2.nvue'
	import pt10 from './pt10.nvue'
	import pt50 from './pt50.nvue'
	import pt100 from './pt100.nvue'
	import myOrderCard from '@/components/myOrder-card/myOrder-card.nvue'
	import {unencryp} from "../../../common/utils/request.js"
	export default {
		components:{myOrderCard,pt2,pt10,pt50,pt100},
		data() {
			return {
				lineWidth:null,
				lineLeft: '0',
				tabList: [
					{
						name:'2人拼团',
						id:'tab0'
					},
					{
						name:'10人拼团',
						id:'tab1'
					},
					{
						name:'50人拼团',
						id:'tab2'
					},
					{
						name:'100人拼团',
						id:'tab3'
					}
				],
				lineLeft: '0',
				tabIndex: 0,
			}
		},
		mounted() {
			this.$nextTick(() => {
				let theNode = uni.createSelectorQuery().select(`#tab0`)
				theNode.boundingClientRect((data)=>{
					setTimeout(()=> {
						this.lineLeft = data.left + 10
						this.lineWidth = data.width - 20
						console.log(this.lineLeft)
					}, 0);
				}).exec()
			})
		},
		methods: {
			swiperChange(e){
				this.tabIndex = e.detail.current
			},
			tabChange(index,id){
				this.tabIndex = index
				let theNode=uni.createSelectorQuery().select(`#${id}`)
				theNode.boundingClientRect((data)=>{
					this.lineLeft = data.left + 10
				}).exec()
			}
		}
	}
</script>

<style scoped>
.tabs{
	height: 80rpx;
	padding: 0 20rpx;
	background-color: #fff;
	position: relative;
}
.tab{
	color: #666;
	font-size: 28rpx;
	line-height: 76rpx;
	text-align: center;
}
.active{
	color: #2C405A;
	border-bottom-width: 4rpx;
	border-bottom-color: #2C405A;
	border-style: solid;
}
.underLine{
	width: 100rpx;
	height: 4rpx;
	background-color: #2C405A;
	position: absolute;
	left: 20rpx;
	bottom: 0;
	transition-property: left;
	transition-duration:.3s;
	transition-timing-function:ease
}
.fresh{
	width: 750rpx;
	height: 80rpx;
}
.lists{
	width: 750rpx;
}
.cell{
	padding: 0 20rpx;
	background-color: #fff;
}
.card{
	margin-top: 20rpx;
}
</style>
