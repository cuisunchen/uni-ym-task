<template>
	<view class="collectionADPage flex1 flex-column">
		<header class="tabs row">
			<view class="tabBox row all-center" v-for="(tab,index) in tabList" :key="index" @click="tabChange(index,tab.id)">
				<text class="tab" :class="{active:tabIndex == index}" :id="tab.id">{{tab.name}}</text>
			</view>
			<!-- <view class="underLine" :style="{width:lineWidth + 'px' ,left: lineLeft + 'px'}"></view> -->
		</header>
		<view class="con flex1" >
			<swiper class="swiper flex1" :current="tabIndex" :indicator-dots="false" 
						:autoplay="false" :duration="500" @change="swiperChage">
				<swiper-item>
					<goods-list></goods-list>
				</swiper-item>
				<swiper-item>
					<ad-list></ad-list>
				</swiper-item>
			</swiper>
		</view>
	</view>
</template>
<script>
	import adList from './adList.nvue'
	import goodsList from './goodsList.nvue'
	export default {
		components:{goodsList,adList},
		data() {
			return {
				tabIndex: 0,
				tabList: [
					{
						name:'商品收藏',
						id:'tab0',
						index:0
					},
					{
						name:'广告收藏',
						id:'tab1',
						index:1
					}
				],
				lineWidth:null,
				lineLeft: '0',
			}
		},
		mounted() {
			this.$nextTick(() => {
				let theNode = uni.createSelectorQuery().select(`#tab0`)
				theNode.boundingClientRect((data)=>{
					setTimeout(()=> {
						this.lineLeft = data.left
						this.lineWidth = data.width
					}, 0);
				}).exec()
			})
		},
		methods: {
			tabChange(index,id){
				this.tabIndex = index
				let theNode=uni.createSelectorQuery().select(`#${id}`)
				theNode.boundingClientRect((data)=>{
					this.lineLeft = data.left
				}).exec()
			},
			swiperChage(e){
				this.tabIndex = e.detail.current
			}
		}
	}
</script>

<style scoped>
.collectionADPage{
	background-color: #f6f6f6;
}
.tabs{
	height: 80rpx;
	padding: 0 20rpx;
	background-color: #fff;
	position: relative;
}
.tabBox{
	height: 80rpx;
	padding: 0 20rpx;
}
.tab{
	color: #666;
	line-height: 76rpx;
	font-size: 28rpx;
	text-align: center;
}
.active{
	color: #2C405A;
	border-bottom-width: 4rpx;
	border-bottom-color: #2C405A;
	border-style: solid;
}
.underLine{
	width: 120rpx;
	height: 4rpx;
	background-color: #2C405A;
	position: absolute;
	left: 40rpx;
	bottom: 0;
	transition-property: left;
	transition-duration:.3s;
	transition-timing-function:ease
}
</style>
