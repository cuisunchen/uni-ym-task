<template>
	<view class="myOrderPage flex1 flex-column">
		<header class="tabs row">
			<view class="tabBox row all-center" v-for="(tab,index) in tabList" :key="index" @click="tabChange(index,tab.id)">
				<text class="tab" :ref="tab.id" :class="{active:tabIndex == index}" :id="tab.id">{{tab.name}}</text>
			</view>
			<!-- <view class="underLine" :style="{width: lineWidth + 'px', left: lineLeft + 'px'}"></view> -->
		</header>
		<swiper class="flex1 swiper" :current="tabIndex" :indicator-dots="false" :autoplay="false" @change="swiperChange">
			<!-- 待发货 -->
			<swiper-item>
				<send-goods-card></send-goods-card>
			</swiper-item>
			<!-- 待收货 -->
			<swiper-item>
				<get-goods-card></get-goods-card>
			</swiper-item>
		</swiper>
	</view>
</template>

<script>
	import sendGoodsCard from './send-good-card.nvue'
	import getGoodsCard from './get-goods-card.nvue'
	import {unencryp} from '../../../common/utils/request.js'
	export default {
		components:{sendGoodsCard,getGoodsCard},
		data() {
			return {
				lineWidth: 0,
				tabList: [
					{
						name:'待发货',
						id:'tab0',
						index:0
					},
					{
						name:'待收货',
						id:'tab1',
						index:1
					}
				],
				lineLeft: '0',
				tabIndex: 0,
			}
		},
		onNavigationBarButtonTap() {
			uni.navigateTo({
				url:'../refundRecord/refundRecord'
			})
		},
		mounted() {
			// this.$nextTick(() => {
			// 	let theNode = uni.createSelectorQuery().select(`#tab0`)
			// 	theNode.boundingClientRect((data)=>{
			// 		setTimeout(()=> {
			// 			this.lineLeft = data.left
			// 			this.lineWidth = data.width
			// 		}, 0);
			// 	}).exec()
			// })
		},
		methods: {
			swiperChange(e){
				this.tabIndex = e.detail.current
			},
			tabClick(item){
				this.tabIndex = item.index
			},
			tabChange(index,id){ 
				this.tabIndex = index
				let theNode=uni.createSelectorQuery().select(`#${id}`)
				theNode.boundingClientRect((data)=>{
					this.lineLeft = data.left
				}).exec()
			},
		}
	}
</script>

<style scoped>
.tabs{
	height: 80rpx;
	padding: 0 20rpx;
	background-color: #fff;
	position: relative;
}
.tabBox{
	height: 80rpx;
	padding: 0 20rpx;
}
.tab{
	color: #666;
	line-height: 76rpx;
	font-size: 28rpx;
	text-align: center;
}
.active{
	color: #2C405A;
	border-bottom-width: 4rpx;
	border-bottom-color: #2C405A;
	border-style: solid;
}
.underLine{
	width: 80rpx;
	height: 4rpx;
	background-color: #2C405A;
	position: absolute;
	left: 40rpx;
	bottom: 0;
	transition-property: left;
	transition-duration:.3s;
	transition-timing-function:ease
}
</style>
