<template>
	<list class="lists flex1" show-scrollbar="false" loadmoreoffset="10" @loadmore="loadMore">
		<refresh class="row fresh all-center" @refresh="onrefresh" @pullingdown="onpullingdown" :display="showLoading">
			<image class="loadingImg" v-if="!loadingStatus" src="../../../static/loading.gif" mode=""></image>
			<view class="loadingIco row align-center">
				<uni-icons class="uni-icons" v-if="loadingStatus" :class="{'refreshRotate': release}" type="pulldown" size="24" color="#999"></uni-icons>
				<text class="freshTit">{{refreshText}}</text>
			</view>
		</refresh>
		<cell class="recommendBox">
			<recommend-list :lists="recommendList" @click="goDetail"></recommend-list>
		</cell>
		<cell class="empty"></cell>
		<cell class="cell">
			<gl-list-item v-for="(item,index) in goodLucks" :key="index" :data-obj="item" @click="goDetail(item,index)"></gl-list-item>
		</cell>
		<cell class="nodata flex1 flex-column all-center" v-if="goodLucks.length == 0">
			<image class="nodataimg" src="../../../static/noData.png" mode="scaleToFill"></image>
			<text class="nodatadesc">暂无数据</text>
		</cell>
	</list>
</template>

<script>
	import {unencryp,request} from '../../../common/utils/request.js'
	import recommendList from "@/components/recommend-list/recommend-list.nvue"
	import glListItem from "@/components/gl-list-item/gl-list-item.nvue"
	export default {
		components:{recommendList,glListItem},
		data(){
			return{
				showLoading:'false',
				loadingStatus: true,
				release:false,
				refreshText: "下拉可以刷新",
				sumPage: null,
				goodLucks:[],
				recommendList:[],
				param:{
					"cityCode": "",
					"classId": 2,
					"pageNum": 1,
					"pageSize": 10,
					"typeId": 2
				},
				recommendParam:{
					"cityCode": "",
					"classId": 2,
					"typeId": 2
				}
			}
		},
		beforeDestroy() {
			uni.$off('sendSameCityGL')
		},
		props:{
			tabIndex:{
				type: Number
			}
		},
		watch:{
			tabIndex(val){
				if(val == 1){
					uni.showLoading({
						title:'加载中 ...'
					})
					this.getLists()
				}
			}
		},
		created() {
			uni.$on('sendSameCityGL', (data) => {
				setTimeout(()=>{
					this.$set(this.goodLucks,data.index,data.data)
				},0)
			})
			this.param.cityCode = uni.getStorageSync('location') ? JSON.parse(uni.getStorageSync('location')).adcode : '';
			this.getRcommendDatas()
		},
		methods:{
			tabClick(i){
				this.tabIndex = i
			},
			getLists(type){
				request('/api/earn/easyMoreTask','post',this.param).then(res=>{
					uni.hideLoading()
					if(type == 'fresh'){
						setTimeout(()=>{
							this.showLoading = 'hide'
							this.loadingStatus = true
							this.release = false
							this.refreshText = '下拉可以刷新'
						},1500)
					}
					if(res.code == 200){
						setTimeout(()=>{
							this.sumPage = res.data.sumPage
							if(type && type == 'loadMore'){
								this.goodLucks.push(res.data.list)
							}else{
								this.goodLucks = res.data.homeAdList
							}
						},0)
					}else{
						uni.showToast({
							title: res.msg,
							icon:'none',
							duration: 2000,
							success:() => {
								setTimeout(()=>{
									this.showLoading = 'hide'
									this.loadingStatus = true
									this.release = false
									this.refreshText = '下拉可以刷新'
								},1200)
							}
						})
					}
				})
			},
			getRcommendDatas(){ 
				request('/api/earn/recommend','post',this.param).then(res=>{
					uni.hideLoading()
					if(res.code == 200){
						setTimeout(()=>{
							this.recommendList = res.data
						},0)
					}else{
						uni.showToast({
							title: res.msg,
							icon:'none',
							duration: 2000,
						})
					}
				})
			},
			onrefresh(){
				this.param.pageNum = 1
				this.loadingStatus = false
				this.showLoading = 'show'
				this.refreshText = '加载中 ...'
				this.getLists('fresh')
			},
			onpullingdown(e){
				if(e.pullingDistance >= 150){
					this.release = true
					this.refreshText = '释放立即刷新'
				}else{
					this.refreshText = '下拉可以刷新'
					this.release = false
				}
			},
			loadMore(){
				if(this.sumPage <= this.param.pageNum){
					return
				}
				this.param.pageNum ++ 
				this.getLists('loadMore')
			},
			goDetail(data,index){
				let type=''
				if(index == 'recommand'){
					type = 'recommand'
					data.bigImg = data.homeBigImgUrl
				}else{
					type = 'goodluck'
					this.userClick(data,index)
				}
				var strRegex = "((http[s]{0,1}|ftp)://[a-zA-Z0-9\\.\\-]+\\.([a-zA-Z]{2,4})(:\\d+)?(/[a-zA-Z0-9\\.\\-~!@#$%^&*+?:_/=<>]*)?)|(www.[a-zA-Z0-9\\.\\-]+\\.([a-zA-Z]{2,4})(:\\d+)?(/[a-zA-Z0-9\\.\\-~!@#$%^&*+?:_/=<>]*)?)";
				let re=new RegExp(strRegex);
				if (!re.test(data.bigImg)) {
					uni.showToast({
						title:'详情页地址有误,请联系客服',
						icon: 'none'
					})
					return
				}
				uni.navigateTo({
					url:'../../subPages/details/details?param='+ encodeURIComponent(JSON.stringify(data)) + 
					'&type=' + type + '&index=' + index + '&tabType=cityGL'
				})
			},
			userClick(item,index){
				let param = {homeAdId : item.id}
				request('/api/userClick','post',param).then(res => {
					if(res.code != 200){
						uni.showToast({
							title: res.msg || res.data,
							icon:'none',
							duration: 2000,
						})
						return
					}
					item.clickNum ++
					this.$set(this.goodLucks,index,item)
				})
			},
		}
	}
</script>

<style scoped>
.empty{
	height: 20rpx;
}
</style>
