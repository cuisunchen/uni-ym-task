<template>
	<list class="lists flex1" loadmoreoffset="10" @loadmore="loadMore">
		<refresh class="row fresh all-center" @refresh="onrefresh" @pullingdown="onpullingdown" :display="showLoading">
			<image class="loadingImg" v-if="!loadingStatus" src="../../../static/loading.gif" mode=""></image>
			<view class="loadingIco row align-center">
				<uni-icons class="uni-icons" v-if="loadingStatus" :class="{'refreshRotate': release}" type="pulldown" size="24" color="#999"></uni-icons>
				<text class="freshTit">{{refreshText}}</text>
			</view>
		</refresh>
		<cell class="recommendBox">
			<recommend-list :lists="recommendData" @click="goDetail"></recommend-list>
		</cell>
		<cell class="empty"></cell>
		<cell class="cell">
			<home-list-item v-for="(item,index) in lists" :key="item.id" :data-obj="item" @click="goDetail(item,index)"></home-list-item>
		</cell>
		<cell class="nodata flex1 flex-column all-center" v-if="lists.length == 0">
			<image class="nodataimg" src="../../../static/noData.png" mode="scaleToFill"></image>
			<text class="nodatadesc">暂无数据</text>
		</cell>
	</list>
</template>

<script>
	import {unencryp,request} from '../../../common/utils/request.js'
	import recommendList from "@/components/recommend-list/recommend-list.nvue"
	import homeListItem from "@/components/home-list-item/home-list-item.nvue"
	export default {
		components:{recommendList,homeListItem},
		data(){
			return{
				showLoading:'false',
				loadingStatus: true,
				release:false,
				refreshText: "下拉可以刷新",
				sumPage: null,
				lists:[],
				recommendList:[],
				param:{
					"cityCode": "",
					"classId": 1,
					"pageNum": 1,
					"pageSize": 10,
					"typeId": 2
				},
				recommendParam:{
					"cityCode": "",
					"classId": 0,
					"typeId": 0
				}
			}
		},
		created() {
			 this.param.cityCode = uni.getStorageSync('location') ? JSON.parse(uni.getStorageSync('location')).adcode : '';
			 uni.showLoading({
			 	title:'加载中...'
			 })
			 this.getLists()
			 this.getRcommendDatas()
		},
		methods:{
			tabClick(i){
				this.tabIndex = i
			},
			getLists(type){
				unencryp('/api/earn/easyMoreTask','post',this.param).then(res=>{
					uni.hideLoading()
					if(type == 'fresh'){
						setTimeout(()=>{
							this.showLoading = 'hide'
							this.loadingStatus = true
							this.release = false
							this.refreshText = '下拉可以刷新'
						},1500)
					}
					if(res.code == 200){
						setTimeout(()=>{
							this.sumPage = res.data.sumPage
							if(type && type == 'loadMore'){
								this.lists.push(res.data.list)
							}else{
								this.lists = res.data.homeAdList
							}
						},0)
					}else{
						res.msg || uni.showToast(res.msg)
					}
				})
			},
			getRcommendDatas(){ 
				unencryp('/api/earn/recommend','post',this.param).then(res=>{
					uni.hideLoading()
					if(res.code == 200){
						setTimeout(()=>{
							this.recommendList = res.data
						},0)
					}else{
						res.msg || uni.showToast(res.msg)
					}
				})
			},
			onrefresh(){
				this.param.pageNum = 1
				this.loadingStatus = false
				this.showLoading = 'show'
				this.refreshText = '加载中 ...'
				this.getLists('fresh')
			},
			onpullingdown(e){
				if(e.pullingDistance >= 150){
					this.release = true
					this.refreshText = '释放立即刷新'
				}else{
					this.refreshText = '下拉可以刷新'
					this.release = false
				}
			},
			loadMore(){
				if(this.sumPage <= this.param.pageNum){
					return
				}
				this.param.pageNum ++ 
				this.getLists('loadMore')
			},
			goDetail(data,index){
				var strRegex = "((http[s]{0,1}|ftp)://[a-zA-Z0-9\\.\\-]+\\.([a-zA-Z]{2,4})(:\\d+)?(/[a-zA-Z0-9\\.\\-~!@#$%^&*+?:_/=<>]*)?)|(www.[a-zA-Z0-9\\.\\-]+\\.([a-zA-Z]{2,4})(:\\d+)?(/[a-zA-Z0-9\\.\\-~!@#$%^&*+?:_/=<>]*)?)";
				let re=new RegExp(strRegex);
				if (!re.test(data.bigImg)) {
					this.showToast('详情页地址有误,请联系客服')
					return
				}
				this.userClick(data,index)
				uni.navigateTo({
					url:'../../subPages/details/details?param='+ encodeURIComponent(JSON.stringify(data)) + '&type=question&index='+index
				})
			},
			userClick(item,index){
				let param = {homeAdId : item.id}
				request('/api/userClick','post',param).then(res => {
					if(res.code != 200){
						this.showToast(res.msg || res.data)
						return
					}
					item.clickNum ++
					this.$set(this.lists,index,item)
				})
			},
		}
	}
</script>

<style scoped>
.empty{
	height: 20rpx;
}
</style>
